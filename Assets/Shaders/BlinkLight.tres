[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://di2rk6l1u7gkd"]

[ext_resource type="Texture2D" uid="uid://umrjg3cimhk1" path="res://addons/kenney_platformer-pack-industrial/Vector/platformerPack_industrial_vector.svg" id="1_ea4ig"]

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_hj1h1"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_i5sa6"]
output_port_for_preview = 0
default_input_values = [0, 1.0, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_ddji6"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 1.0, 2, 0.5]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_280cw"]
source = 2
texture = ExtResource("1_ea4ig")

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_ndefs"]
output_port_for_preview = 0
operator = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_8jrau"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_ik6t1"]
function = 2

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_ju3cm"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8m11m"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0gtnr"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.8]
operator = 4

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, UV);


// Input:8
	float n_out8p0 = TIME;


// FloatOp:9
	float n_in9p1 = 0.80000;
	float n_out9p0 = mod(n_out8p0, n_in9p1);


// Compare:15
	float n_in15p1 = 1.00000;
	float n_in15p2 = 0.50000;
	bool n_out15p0 = (abs(n_out9p0 - n_in15p1) < n_in15p2);

// FloatOp:14
	float n_in14p0 = 1.00000;
	float n_out14p0 = n_in14p0 - n_out9p0;


	float n_out13p0;
// Switch:13
	n_out13p0 = mix(n_out14p0, n_out9p0, float(n_out15p0));


	vec3 n_out6p0;
// ColorFunc:6
	{
		vec3 c = vec3(n_out3p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out6p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// VectorDecompose:5
	float n_out5p0 = n_out6p0.x;
	float n_out5p1 = n_out6p0.y;
	float n_out5p2 = n_out6p0.z;


// ColorOp:7
	vec3 n_out7p0 = min(vec3(n_out13p0), vec3(n_out5p1));


	vec3 n_out4p0;
// ColorOp:4
	{
		float base = vec3(n_out3p0.xyz).x;
		float blend = n_out7p0.x;
		if (base < 0.5) {
			n_out4p0.x = 2.0 * base * blend;
		} else {
			n_out4p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p0.xyz).y;
		float blend = n_out7p0.y;
		if (base < 0.5) {
			n_out4p0.y = 2.0 * base * blend;
		} else {
			n_out4p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p0.xyz).z;
		float blend = n_out7p0.z;
		if (base < 0.5) {
			n_out4p0.z = 2.0 * base * blend;
		} else {
			n_out4p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1140, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_280cw")
nodes/fragment/3/position = Vector2(-460, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorOp_ndefs")
nodes/fragment/4/position = Vector2(640, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDecompose_8jrau")
nodes/fragment/5/position = Vector2(40, 460)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorFunc_ik6t1")
nodes/fragment/6/position = Vector2(-160, 440)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorOp_ju3cm")
nodes/fragment/7/position = Vector2(360, 280)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_8m11m")
nodes/fragment/8/position = Vector2(-1400, -360)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_0gtnr")
nodes/fragment/9/position = Vector2(-740, -380)
nodes/fragment/13/node = SubResource("VisualShaderNodeSwitch_hj1h1")
nodes/fragment/13/position = Vector2(-20, -280)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatOp_i5sa6")
nodes/fragment/14/position = Vector2(-340, -80)
nodes/fragment/15/node = SubResource("VisualShaderNodeCompare_ddji6")
nodes/fragment/15/position = Vector2(-340, -660)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 3, 0, 6, 0, 6, 0, 5, 0, 5, 1, 7, 1, 7, 0, 4, 1, 4, 0, 0, 0, 8, 0, 9, 0, 9, 0, 13, 1, 9, 0, 14, 1, 14, 0, 13, 2, 9, 0, 15, 0, 15, 0, 13, 0, 13, 0, 7, 0)
